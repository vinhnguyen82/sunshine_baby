buildscript {
    ext {
        springBootVersion = '1.4.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.h2database:h2:1.4.191'
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.0.3"
    id "com.moowork.node" version "1.1.1"
}

flyway {
    url = 'jdbc:mysql://localhost/sunshinetest?serverTimezone=UTC'
    user = 'root'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'project-report'

jar {
    baseName = 'sunshine-forge'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// https://github.com/srs/gradle-node-plugin gives us npm_run_build, then we copy the webpack bundle /src/main/resources/static (spring serves files automatically from there)
task copyResources(type: Copy) {
    from 'sunshine-forge-client/build/' into 'src/main/resources/static'
}
copyResources.dependsOn npm_run_build

processResources.dependsOn copyResources

test.outputs.upToDateWhen {false}

node {
    download = false
    npmWorkDir = file("${project.buildDir}/npm")
    nodeModulesDir = file("${project.projectDir}/sunshine-forge-client")
    npmWorkDir = file("${project.projectDir}/sunshine-forge-client")
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.0.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.0.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.2.0'
    compile group: 'com.jayway.jsonpath', name: 'json-path-assert', version: '2.2.0'
    compile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.5'
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    compile "org.projectlombok:lombok:1.16.16"

    testCompile('org.springframework.boot:spring-boot-starter-test')

    testCompile group: 'org.fluentlenium', name: 'fluentlenium-junit', version: '3.1.1'
    testCompile group: 'org.fluentlenium', name: 'fluentlenium-assertj', version: '3.1.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.eclipse.jetty.websocket', name: 'websocket-api', version: '9.3.5.v20151012'
    testCompile group: 'org.eclipse.jetty.websocket', name: 'websocket-client', version: '9.3.5.v20151012'
    testCompile group: 'xml-apis', name: 'xml-apis', version: '1.4.01'

    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.0.1'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.0.1'
    testCompile('org.seleniumhq.selenium:selenium-remote-driver:3.0.1')
    testCompile('org.seleniumhq.selenium:selenium-api:3.0.1')

    testCompile group: 'com.google.guava', name: 'guava', version: '19.0'

    runtime('com.h2database:h2')
}

test {
    systemProperty 'fluentlenium.webDriver', 'chrome'
    //systemProperty 'webdriver.chrome.driver', '/Users/brent.gardner/Downloads/chromedriver'
}